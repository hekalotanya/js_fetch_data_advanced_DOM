{"version":3,"sources":["scripts/main.js"],"names":["url","getPhones","Promise","resolve","reject","fetch","then","response","json","phones","setTimeout","getFirstReceivedDetails","list","race","map","id","result","getThreeFastestDetails","getAllSuccessfulDetails","allSettled","data","element","makeMessage","name","console","log","filter","status","value","resultArray","i","push","classMessage","messageResult","message","document","createElement","head","classList","add","textContent","append","querySelector","Array","forEach","listItem"],"mappings":";AAAA,aAGA,IAAMA,EAAM,wEAENC,EAAY,WACT,OAAA,IAAIC,QAAQ,SAACC,EAASC,GAC3BC,MAAML,GACHM,KAAK,SAAAC,GAAYA,OAAAA,EAASC,SAC1BF,KAAK,SAAAG,GACJN,EAAQM,KAGZC,WAAW,WACTN,KACC,QAIDO,EAA0B,SAACC,GACxBV,OAAAA,QAAQW,KAAKD,EAAKE,IAAI,SAAAC,GAC3BV,OAAAA,MAA0EU,oEAAAA,OAAAA,EAA1E,UACGT,KAAK,SAAAU,GAAUA,OAAAA,EAAOR,aAIvBS,EAAyB,SAACL,GACvBV,OAAAA,QAAQW,KAAKD,EAAKE,IAAI,SAAAC,GAC3BV,OAAAA,MAA0EU,oEAAAA,OAAAA,EAA1E,UACGT,KAAK,SAAAU,GAAUA,OAAAA,EAAOR,aAIvBU,EAA0B,SAACN,GACxBV,OAAAA,QAAQiB,WAAWP,EAAKE,IAAI,SAAAC,GACjCV,OAAAA,MAA0EU,oEAAAA,OAAAA,EAA1E,UACGT,KAAK,SAAAU,GAAUA,OAAAA,EAAOR,aAI7BP,IACGK,KAAK,SAAAc,GACJT,EAAwBS,EAAKN,IAAI,SAAAO,GAAWA,OAAAA,EAAQN,MACjDT,KAAK,SAAAU,GACJM,EAAY,iBAAkB,iBAAkBN,EAAOO,QAG3DL,EAAwBE,EAAKN,IAAI,SAAAO,GAAWA,OAAAA,EAAQN,MACjDT,KAAK,SAAAU,GACJQ,QAAQC,IAAIT,GACZM,EAAY,iBAAkB,iBAAkBN,EAC7CU,OAAO,SAAAL,GAAWA,MAAkB,cAAlBA,EAAQM,SAC1Bb,IAAI,SAAAO,GAAWA,OAAAA,EAAQO,MAAML,UAK/B,IAFCM,IAAAA,EAAc,GAEXC,EAAI,EAAGA,EAAI,EAAGA,IACrBb,EAAuBG,EAAKN,IAAI,SAAAO,GAAWA,OAAAA,EAAQN,MAChDT,KAAK,SAAAU,GACJa,EAAYE,KAAKf,KAIvBM,EAAY,iBAAkB,oBAAqBO,EAAYf,IAAI,SAAAO,GAAWA,OAAAA,EAAQE,UAI1F,IAAMD,EAAc,SAACU,EAAcC,EAAejB,GAC1CkB,IAAAA,EAAUC,SAASC,cAAc,OACjCC,EAAOF,SAASC,cAAc,MAC9BxB,EAAOuB,SAASC,cAAc,MAOhCpB,GALJkB,EAAQI,UAAUC,IAAOP,GAAAA,OAAAA,IACzBK,EAAKG,YAAiBP,GAAAA,OAAAA,GACtBC,EAAQO,OAAOJ,EAAMzB,GACrBuB,SAASO,cAAc,QAAQD,OAAOP,GAElClB,aAAkB2B,MACpB3B,EAAO4B,QAAQ,SAAAvB,GACPwB,IAAAA,EAAWV,SAASC,cAAc,MAExCS,EAASL,YAAcnB,EACvBT,EAAK6B,OAAOI,SAET,CACCA,IAAAA,EAAWV,SAASC,cAAc,MAExCS,EAASL,YAAcxB,EACvBJ,EAAK6B,OAAOI","file":"main.4e0c21a1.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\r\n\r\n// write code here\r\nconst url = 'https://mate-academy.github.io/phone-catalogue-static/api/phones.json';\r\n\r\nconst getPhones = () => {\r\n  return new Promise((resolve, reject) => {\r\n    fetch(url)\r\n      .then(response => response.json())\r\n      .then(phones => {\r\n        resolve(phones);\r\n      });\r\n\r\n    setTimeout(() => {\r\n      reject();\r\n    }, 5000);\r\n  });\r\n};\r\n\r\nconst getFirstReceivedDetails = (list) => {\r\n  return Promise.race(list.map(id =>\r\n    fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones/${id}.json`)\r\n      .then(result => result.json())\r\n  ));\r\n};\r\n\r\nconst getThreeFastestDetails = (list) => {\r\n  return Promise.race(list.map(id =>\r\n    fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones/${id}.json`)\r\n      .then(result => result.json())\r\n  ));\r\n};\r\n\r\nconst getAllSuccessfulDetails = (list) => {\r\n  return Promise.allSettled(list.map(id =>\r\n    fetch(`https://mate-academy.github.io/phone-catalogue-static/api/phones/${id}.json`)\r\n      .then(result => result.json())\r\n  ));\r\n};\r\n\r\ngetPhones()\r\n  .then(data => {\r\n    getFirstReceivedDetails(data.map(element => element.id))\r\n      .then(result => {\r\n        makeMessage('first-received', 'First Received', result.name);\r\n      });\r\n\r\n    getAllSuccessfulDetails(data.map(element => element.id))\r\n      .then(result => {\r\n        console.log(result);\r\n        makeMessage('all-successful', 'All Successful', result\r\n          .filter(element => element.status ==='fulfilled')\r\n          .map(element => element.value.name));\r\n      });\r\n\r\n    const resultArray = [];\r\n\r\n    for (let i = 0; i < 3; i++) {\r\n      getThreeFastestDetails(data.map(element => element.id))\r\n        .then(result => {\r\n          resultArray.push(result);\r\n        });\r\n    }\r\n\r\n    makeMessage('three-received', 'First 3 responses', resultArray.map(element => element.name));\r\n\r\n  });\r\n\r\nconst makeMessage = (classMessage, messageResult, result) => {\r\n  const message = document.createElement('div');\r\n  const head = document.createElement('h3');\r\n  const list = document.createElement('ul');\r\n\r\n  message.classList.add(`${classMessage}`);\r\n  head.textContent = `${messageResult}`;\r\n  message.append(head, list);\r\n  document.querySelector('body').append(message);\r\n\r\n  if (result instanceof Array) {\r\n    result.forEach(element => {\r\n      const listItem = document.createElement('li');\r\n\r\n      listItem.textContent = element;\r\n      list.append(listItem);\r\n    });\r\n  } else {\r\n    const listItem = document.createElement('li');\r\n\r\n    listItem.textContent = result;\r\n    list.append(listItem);\r\n  }\r\n};\r\n"]}